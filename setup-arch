#!/bin/bash

# Exit on error
set -e

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Function to print status messages
print_status() {
    echo -e "${GREEN}[✓]${NC} $1"
}

print_error() {
    echo -e "${RED}[✗]${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}[!]${NC} $1"
}

# Check if running as root
if [ "$EUID" -ne 0 ]; then
    print_error "Please run as root"
    exit 1
fi

GIT_REPO_URL="https://github.com/Igor-Ochocki/WUTSKCalendar.git"

# Check if yay is installed
if ! command -v yay &> /dev/null; then
    print_status "Installing yay..."
    pacman -S --needed git base-devel
    git clone https://aur.archlinux.org/yay.git
    cd yay
    makepkg -si
    cd ..
fi

# Install required packages
print_status "Installing required packages..."
yay -S --needed \
    nodejs \
    npm \
    nginx \
    certbot \
    python-certbot-nginx \
    openssl

# Create application directory
APP_DIR="/opt/wutsk-calendar"
if [ ! -d "$APP_DIR" ]; then
    print_status "Creating application directory..."
    mkdir -p "$APP_DIR"
fi

# Clone the repository
print_status "Cloning repository..."
if [ -d "$APP_DIR/.git" ]; then
    print_warning "Repository already exists. Updating..."
    cd "$APP_DIR"
    git pull origin main
else
    print_warning "Directory exists but is not a git repository. Cleaning and cloning..."
    # Backup any existing files if they exist
    if [ "$(ls -A $APP_DIR)" ]; then
        BACKUP_DIR="/opt/wutsk-calendar_backup_$(date +%Y%m%d_%H%M%S)"
        print_status "Creating backup of existing files in $BACKUP_DIR"
        mkdir -p "$BACKUP_DIR"
        # Move all files and directories
        mv "$APP_DIR"/* "$BACKUP_DIR/"
    fi
    # Remove the directory completely
    rm -rf "$APP_DIR"
    # Clone the repository
    git clone "$GIT_REPO_URL" "$APP_DIR"
fi

# Create deployment script
print_status "Creating deployment script..."
cat > "$APP_DIR/deploy.sh" << 'EOL'
#!/bin/bash

# Exit on error
set -e

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
NC='\033[0m'

# Function to print status messages
print_status() {
    echo -e "${GREEN}[✓]${NC} $1"
}

print_error() {
    echo -e "${RED}[✗]${NC} $1"
}

# Check if running as root
if [ "$EUID" -ne 0 ]; then
    print_error "Please run as root"
    exit 1
fi

# Stop the service
print_status "Stopping service..."
systemctl stop wutsk-calendar

# Pull latest changes
print_status "Pulling latest changes..."
git pull origin main

# Install dependencies
print_status "Installing dependencies..."
npm install

# Build the application
print_status "Building application..."
npm run build

# Start the service
print_status "Starting service..."
systemctl start wutsk-calendar

# Check service status
if systemctl is-active --quiet wutsk-calendar; then
    print_status "Service started successfully"
else
    print_error "Service failed to start"
    exit 1
fi

print_status "Deployment completed successfully"
EOL

# Make deployment script executable
chmod +x "$APP_DIR/deploy.sh"

# Build and start the application
print_status "Building and starting the application..."
cd "$APP_DIR"

# Clean install dependencies
print_status "Cleaning and installing dependencies..."
rm -rf node_modules package-lock.json
npm install

# Build the application
print_status "Building application..."
npm run build

print_status "Setup completed successfully!"
print_warning "The application has been cloned and built"
print_warning "To configure the application, run: sudo ./configure-arch.sh"
print_warning "To update the application, run: cd $APP_DIR && ./deploy.sh"
