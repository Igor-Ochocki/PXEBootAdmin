#!/bin/sh
# setup-arch - Setup Arch Linux environment for WUT SK Calendar
# ochockii 2025

# Exit on error
set -e

# Constants
GIT_REPO_URL="https://github.com/Igor-Ochocki/WUTSKCalendar.git"
APP_DIR="/opt/wutsk-calendar"

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m'

# Function to print status messages
print_status() {
  echo -e "${GREEN}[✓]${NC} $1"
}

print_error() {
  echo -e "${RED}[✗]${NC} $1"
}

print_warning() {
  echo -e "${YELLOW}[!]${NC} $1"
}

usage() {
  echo "Usage: $0"
  echo "Setup Arch Linux environment for WUT SK Calendar"
  exit 1
}

[ "$(id -u)" -eq 0 ] || { print_error "Please run as root"; exit 1; }

command -v yay >/dev/null 2>&1 || {
  print_status "Installing yay..."
  pacman -S --needed git base-devel
  git clone https://aur.archlinux.org/yay.git
  cd yay
  makepkg -si
  cd ..
}

yay -S --needed \
  nodejs \
  npm \
  nginx \
  certbot \
  python-certbot-nginx \
    openssl

[ -d "$APP_DIR" ] || { print_status "Creating application directory..."; mkdir -pv "$APP_DIR"; }

if [ -d "$APP_DIR/.git" ]; then
  print_warning "Repository already exists. Updating..."
  cd "$APP_DIR"
  git pull -v origin main
else
  print_warning "Directory exists but is not a git repository. Cleaning and cloning..."
  [ "$(ls -A "$APP_DIR")" ] && {
    BACKUP_DIR="/opt/wutsk-calendar_backup_$(date +%Y%m%d_%H%M%S)"
    print_status "Creating backup of existing files in $BACKUP_DIR"
    mkdir -pv "$BACKUP_DIR"
    mv -v "$APP_DIR"/* "$BACKUP_DIR/"
  }
  rm -rfv "$APP_DIR"
  git clone -v "$GIT_REPO_URL" "$APP_DIR"
fi

# Create deployment script
cat > "$APP_DIR/deploy.sh" << 'EOL'
#!/bin/sh
# deploy - Deploy WUT SK Calendar
# ochockii 2025

# Exit on error
set -e

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
NC='\033[0m'

# Function to print status messages
print_status() {
  echo -e "${GREEN}[✓]${NC} $1"
}

print_error() {
  echo -e "${RED}[✗]${NC} $1"
}

[ "$(id -u)" -eq 0 ] || { print_error "Please run as root"; exit 1; }

print_status "Stopping service..."
systemctl stop wutsk-calendar

git pull -v origin main

npm install --verbose

npm run build --verbose

print_status "Starting service..."
systemctl start wutsk-calendar

systemctl is-active --quiet wutsk-calendar || { print_error "Service failed to start"; exit 1; }

print_status "Deployment completed successfully"

exit 0
EOL

chmod -v +x "$APP_DIR/deploy.sh"

print_status "Building and starting the application..."
cd "$APP_DIR"

rm -rfv node_modules package-lock.json
npm install --verbose

npm run build --verbose

print_status "Setup completed successfully!"
print_warning "The application has been cloned and built"
print_warning "To configure the application, run: sudo ./configure-arch.sh"
print_warning "To update the application, run: cd $APP_DIR && ./deploy.sh"

exit 0
